---
import Layout from "../layouts/Layout.astro";
import CategorySection from "../components/CategorySection.astro";
import SearchBar from "../components/SearchBar.astro";

import { symbolsByLang } from "../symbols.json";

interface Symbol {
	title: string;
	image: string;
	category: string;
}

interface Props {	
    title: string;
    description: string;
    categories: {
    	[key: string]: {
          name: string,
          imageUrl: string
        }
    }
	symbols: Symbol[];
	searchPrompt?: string;
}

export async function getStaticPaths() {
	const paths = [
		{
			...symbolsByLang[0],
			lang: undefined,
		},
		...symbolsByLang,
	];

	return paths.map((path) => {
		const { lang } = path;
		return {
			params: { lang: lang },
			props: { ...path },
		};
	});
}

const { lang = "en" } = Astro.params;
const { title, description, symbols, categories, searchPrompt } = Astro.props;

interface SymbolObjectByAttribute {
	[key: string]: Symbol[];
}

const symbolsByCategory: SymbolObjectByAttribute = symbols.reduce(
	(symbolsObject: SymbolObjectByAttribute, symbol) => {
		if (symbolsObject[symbol.category]) {
			symbolsObject[symbol.category].push(symbol);
		} else {
			symbolsObject[symbol.category] = [symbol];
		}
		return symbolsObject;
	},
	{}
);
---

<Layout title={title} description={description}>
	<SearchBar
		current={lang}
		prompt={searchPrompt}
		languages={[
			{
				slug: "en",
				emoji: "ðŸ‡ºðŸ‡¸",
			},
			{
				slug: "pt-br",
				emoji: "ðŸ‡§ðŸ‡·",
			},
		]}
	/>
	<main class="m-auto mb-20 max-w-3xl bg-cyan-50 p-3">
		{
			Object.keys(symbolsByCategory).map((category) => {
				return (
					<CategorySection
						symbols={symbolsByCategory[category]}
						title={categories[category].name}
						icon={categories[category].imageUrl}
					/>
				);
			})
		}
	</main>
</Layout>
