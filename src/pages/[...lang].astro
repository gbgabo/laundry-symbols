---
import Layout from "~/layouts/Layout.astro";
import CategorySection from "~/components/CategorySection.astro";
import SearchBar from "~/components/SearchBar.astro";

import { getCollection } from 'astro:content';

interface Symbol {
	title: string;
	image: string;
	category: string;
}

interface SymbolObjectByAttribute {
	[key: string]: Symbol[];
}

export async function getStaticPaths() {
	const symbolsCollection = await getCollection('symbols');
	return symbolsCollection.map(entry => ({
		params: { lang: entry.id }, 
		props: { entry },
	}));
}

const { lang } = Astro.params;
const { entry } = Astro.props;
const { title, description, symbols, categories, searchPrompt, footer } = entry.data;

const symbolsByCategory = symbols.reduce(
	(symbolsObject: SymbolObjectByAttribute, symbol) => {
		if (symbolsObject[symbol.category]) {
			symbolsObject[symbol.category].push(symbol);
		} else {
			symbolsObject[symbol.category] = [symbol];
		}
		return symbolsObject;
	},
	{}
);

// const symbolsByCategory = Object.groupBy(symbols, ({ category }) => category);
---

<Layout title={title} description={description} footer={footer}>
	<SearchBar
		current={lang}
		prompt={searchPrompt}
		languages={[
			{
				slug: "en",
				emoji: "ðŸ‡ºðŸ‡¸",
			},
			{
				slug: "pt-br",
				emoji: "ðŸ‡§ðŸ‡·",
			},
		]}
	/>
	<main class="m-auto mb-20 max-w-3xl bg-cyan-50 p-3">
		{
			Object.keys(symbolsByCategory).map((category) => {
				return (
					<CategorySection
						symbols={symbolsByCategory[category]}
						title={categories[category].name}
						icon={categories[category].imageUrl}
					/>
				);
			})
		}
	</main>
</Layout>
